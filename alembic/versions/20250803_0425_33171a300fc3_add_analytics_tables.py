"""add_analytics_tables

Revision ID: 33171a300fc3
Revises: e4c7a1149087
Create Date: 2025-08-03 04:25:08.258145+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '33171a300fc3'
down_revision: Union[str, None] = 'e4c7a1149087'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_booking_analytics_id', table_name='booking_analytics')
    op.drop_index('ix_booking_analytics_metric_name', table_name='booking_analytics')
    op.drop_table('booking_analytics')
    op.drop_index('ix_customer_demographics_country', table_name='customer_demographics')
    op.drop_index('ix_customer_demographics_id', table_name='customer_demographics')
    op.drop_table('customer_demographics')
    op.drop_index('ix_location_popularity_id', table_name='location_popularity')
    op.drop_table('location_popularity')
    op.drop_index('ix_tour_popularity_id', table_name='tour_popularity')
    op.drop_table('tour_popularity')
    op.drop_index('ix_monthly_booking_stats_id', table_name='monthly_booking_stats')
    op.drop_table('monthly_booking_stats')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monthly_booking_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('month', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_bookings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_customers', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_tours_booked', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_locations_booked', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('most_popular_tour_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('most_popular_location_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['most_popular_location_id'], ['locations.id'], name='monthly_booking_stats_most_popular_location_id_fkey'),
    sa.ForeignKeyConstraint(['most_popular_tour_id'], ['tours.id'], name='monthly_booking_stats_most_popular_tour_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='monthly_booking_stats_pkey')
    )
    op.create_index('ix_monthly_booking_stats_id', 'monthly_booking_stats', ['id'], unique=False)
    op.create_table('tour_popularity',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('tour_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('booking_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_locations_selected', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_locations_per_booking', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('last_booked', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('first_booked', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tour_id'], ['tours.id'], name='tour_popularity_tour_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tour_popularity_pkey')
    )
    op.create_index('ix_tour_popularity_id', 'tour_popularity', ['id'], unique=False)
    op.create_table('location_popularity',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('location_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('booking_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_booked', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('first_booked', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name='location_popularity_location_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='location_popularity_pkey')
    )
    op.create_index('ix_location_popularity_id', 'location_popularity', ['id'], unique=False)
    op.create_table('customer_demographics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('customer_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_bookings', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('avg_age', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('avg_tours_per_booking', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('avg_locations_per_booking', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('most_popular_tour_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['most_popular_tour_id'], ['tours.id'], name='customer_demographics_most_popular_tour_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='customer_demographics_pkey')
    )
    op.create_index('ix_customer_demographics_id', 'customer_demographics', ['id'], unique=False)
    op.create_index('ix_customer_demographics_country', 'customer_demographics', ['country'], unique=False)
    op.create_table('booking_analytics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('metric_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('metric_value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('metric_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_calculated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='booking_analytics_pkey')
    )
    op.create_index('ix_booking_analytics_metric_name', 'booking_analytics', ['metric_name'], unique=False)
    op.create_index('ix_booking_analytics_id', 'booking_analytics', ['id'], unique=False)
    # ### end Alembic commands ###
